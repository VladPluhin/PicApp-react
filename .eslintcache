[{"E:\\study\\PictureApp-react\\src\\index.js":"1","E:\\study\\PictureApp-react\\src\\App.js":"2","E:\\study\\PictureApp-react\\src\\reportWebVitals.js":"3","E:\\study\\PictureApp-react\\src\\context\\context.js":"4","E:\\study\\PictureApp-react\\src\\components\\Header\\Header.js":"5","E:\\study\\PictureApp-react\\src\\components\\SectionSearch\\SectionSearch.js":"6","E:\\study\\PictureApp-react\\src\\components\\SectionLikedPost\\SectionLikedPost.js":"7","E:\\study\\PictureApp-react\\src\\components\\SectionMain\\SectionMain.js":"8","E:\\study\\PictureApp-react\\src\\components\\SectionAbout\\SectionAbout.js":"9","E:\\study\\PictureApp-react\\src\\components\\CardRow\\CardRow.js":"10","E:\\study\\PictureApp-react\\src\\components\\Spiner\\Spiner.js":"11","E:\\study\\PictureApp-react\\src\\components\\Logo\\Logo.js":"12","E:\\study\\PictureApp-react\\src\\hooks\\useObserver.js":"13","E:\\study\\PictureApp-react\\src\\components\\Nav\\Nav.js":"14","E:\\study\\PictureApp-react\\src\\state\\state.js":"15","E:\\study\\PictureApp-react\\src\\components\\Filter\\Filter.js":"16","E:\\study\\PictureApp-react\\src\\components\\Card\\Card.js":"17","E:\\study\\PictureApp-react\\src\\UI\\BtnPrimary.js":"18","E:\\study\\PictureApp-react\\src\\components\\Popup\\Popup.js":"19"},{"size":349,"mtime":1650397955175,"results":"20","hashOfConfig":"21"},{"size":1204,"mtime":1652027849966,"results":"22","hashOfConfig":"21"},{"size":362,"mtime":499162500000,"results":"23","hashOfConfig":"21"},{"size":90,"mtime":1652026972329,"results":"24","hashOfConfig":"21"},{"size":361,"mtime":1651508256217,"results":"25","hashOfConfig":"21"},{"size":913,"mtime":1652027366993,"results":"26","hashOfConfig":"21"},{"size":370,"mtime":1650467582110,"results":"27","hashOfConfig":"21"},{"size":1539,"mtime":1652027869782,"results":"28","hashOfConfig":"21"},{"size":1511,"mtime":1649694432534,"results":"29","hashOfConfig":"21"},{"size":978,"mtime":1652026718745,"results":"30","hashOfConfig":"21"},{"size":506,"mtime":1650048415566,"results":"31","hashOfConfig":"21"},{"size":268,"mtime":1652017236587,"results":"32","hashOfConfig":"21"},{"size":497,"mtime":1650096546119,"results":"33","hashOfConfig":"21"},{"size":572,"mtime":1651508585317,"results":"34","hashOfConfig":"21"},{"size":1164,"mtime":1652027889031,"results":"35","hashOfConfig":"21"},{"size":4211,"mtime":1652027862286,"results":"36","hashOfConfig":"21"},{"size":2938,"mtime":1652026727369,"results":"37","hashOfConfig":"21"},{"size":525,"mtime":1652013175003,"results":"38","hashOfConfig":"21"},{"size":1211,"mtime":1650037583856,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"130a6no",{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"48"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"48"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"E:\\study\\PictureApp-react\\src\\index.js",[],"E:\\study\\PictureApp-react\\src\\App.js",[],"E:\\study\\PictureApp-react\\src\\reportWebVitals.js",[],"E:\\study\\PictureApp-react\\src\\context\\context.js",[],["81","82"],"E:\\study\\PictureApp-react\\src\\components\\Header\\Header.js",[],"E:\\study\\PictureApp-react\\src\\components\\SectionSearch\\SectionSearch.js",[],"E:\\study\\PictureApp-react\\src\\components\\SectionLikedPost\\SectionLikedPost.js",[],"E:\\study\\PictureApp-react\\src\\components\\SectionMain\\SectionMain.js",["83","84"],"import React, { useEffect, useRef , useState} from \"react\";\r\nimport classes from \"./sectionMain.module.scss\";\r\nimport CardRow from \"../CardRow/CardRow\";\r\nimport Spinner from \"../Spiner/Spiner\";\r\nimport { useObserver } from \"../../hooks/useObserver\";\r\nimport State from \"../../state/state\";\r\n\r\nconst SectionMain = () => {\r\n<<<<<<< HEAD\r\n\t\tconst state = new State();\r\n\t\tconst lastElement = useRef();\r\n    const [page, setPageRender] = useState(0);\r\n    const [data, setRespones] = useState();\r\n    const [posts, setPosts] = useState([]);\r\n    \r\n    function getPosts(posts, data) {\r\n\t\t\tlet newArr = []\r\n\t\t\tif (data) {\r\n\t\t\t\t\tnewArr = [...posts, ...data.response.results];\r\n\t\t\t\t\treturn setPosts(newArr);\r\n\t\t\t\t}\r\n\t\t}\r\n    \r\n    useObserver(lastElement, data, () => {\r\n\t\t\tsetPageRender(page + 1);\r\n    });\r\n\r\n    useEffect(() => {\r\n\t\t\tstate.getData( page, setRespones);\r\n    }, [page]);\r\n\r\n\t\tuseEffect(() => {\r\n\t\t\tgetPosts(posts, data)\r\n\t\t}, [data]);\r\n  \r\n=======\r\n  const { data, setRespones, page, setPageRender, getData ,getPosts, posts ,noneFiltered , sortedPost, getSortedPostData, setSortedData, getSotedPosts, resuls, returned, sortedData} = useContext(LikesContext);\r\n  const lastElement = useRef();\r\n\r\n\r\n  useObserver(lastElement, data, () => {\r\n   setPageRender(page + 1);\r\n  });\r\n\r\n  useEffect(() => {\r\n     getData( page);\r\n  }, [page, ]);\r\n\r\n  useEffect(() => {\r\n    getPosts(posts, data)\r\n  }, [data]);\r\n\r\n\r\n\r\n>>>>>>> b1827605585ea0e2d03a0692f3ca1a5c3d37e3b2\r\n  if (posts.length === 0) {\r\n    return (\r\n      <section className={classes.sectionMain}>\r\n        <div className=\"container\">\r\n          <Spinner />\r\n          <div ref={lastElement} style={{ height: 1 }}></div>\r\n        </div>\r\n      </section>\r\n    );\r\n  } else{\r\n    return (\r\n      <section className={classes.sectionMain}>\r\n        <div className=\"container\">\r\n          <CardRow\r\n            data={resuls}\r\n            likesRow={false}\r\n          />\r\n          <div ref={lastElement} style={{ height: 1 }}></div>\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n};\r\n\r\nexport default SectionMain;\r\n","E:\\study\\PictureApp-react\\src\\components\\SectionAbout\\SectionAbout.js",[],"E:\\study\\PictureApp-react\\src\\components\\CardRow\\CardRow.js",[],"E:\\study\\PictureApp-react\\src\\components\\Spiner\\Spiner.js",[],"E:\\study\\PictureApp-react\\src\\components\\Logo\\Logo.js",[],"E:\\study\\PictureApp-react\\src\\hooks\\useObserver.js",[],"E:\\study\\PictureApp-react\\src\\components\\Nav\\Nav.js",[],"E:\\study\\PictureApp-react\\src\\state\\state.js",[],"E:\\study\\PictureApp-react\\src\\components\\Filter\\Filter.js",["85","86"],"import React, { useState, useContext } from \"react\";\r\nimport classes from \"./filter.module.scss\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport State from '../../state/state';\r\nimport BtnPrimary from  '../../UI/BtnPrimary';\r\nimport { AppContext } from \"../../context/context\";\r\nconst Filter = (props ) => {\r\n  const state = new State();\r\n  const nodeRef = React.useRef(null)\r\n  const [showed, setShowedFilter] = useState(false);\r\n  const { searchPosts, setSearchPosts } = useContext(AppContext);\r\n  const [animateButton, setAnimateButton] = useState(false);\r\n<<<<<<< HEAD\r\n  const [filter, setFilter]= useState({\r\n    query: 'space',\r\n    page: 1,\r\n    perPage: 10,\r\n    color: 'black',\r\n    orientation: 'portrait'\r\n  })\r\n \r\n  const getFilterValue=( key, value) => {\r\n    const newfilterValue = filter;\r\n    Object.keys(newfilterValue).map((item)=> {\r\n        if(item === key ) {\r\n          newfilterValue[item] = value;\r\n        }\r\n      }\r\n    )\r\n   return setFilter(newfilterValue);\r\n  } \r\n  \r\n  function getPosts() {\r\n    return state.getSortedPostData( filter, setSearchPosts)\r\n   } \r\n \r\n=======\r\n  const [filter, setFilters]= useState({\r\n      landscape: null,\r\n      portrait:null,\r\n      squarish: null\r\n  })\r\n>>>>>>> b1827605585ea0e2d03a0692f3ca1a5c3d37e3b2\r\n  const getShowedFilter = () => {\r\n      // showed ?  document.body.classList.remove('active-filter'): \r\n      // document.body.classList.add('active-filter')\r\n      return showed ? setShowedFilter(false) : setShowedFilter(true);\r\n  };\r\n<<<<<<< HEAD\r\n \r\n  \r\n=======\r\n\r\n  const getOrientirValue=(key,value )=> {\r\n    setFilters((prev)=> ({\r\n        ...prev,\r\n        key: value\r\n      })\r\n   )\r\n  }\r\n  const getfiltered=(event)=> {\r\n    event.preventDefault()\r\n    return setFilter(false)\r\n  }\r\n\r\n  const getallPosts=(event)=> {\r\n    event.preventDefault()\r\n    return setFilter(true)\r\n  }\r\n>>>>>>> b1827605585ea0e2d03a0692f3ca1a5c3d37e3b2\r\n  return (\r\n    <div className={classes.sorting}>\r\n      <button\r\n        className={animateButton ?' sortingclose active' : 'sortingclose ' }\r\n        onClick={() => {getShowedFilter()}}>\r\n        <span></span>\r\n        <span></span>\r\n        <span></span>\r\n      </button>\r\n      <CSSTransition\r\n        nodeRef={nodeRef} \r\n        in={showed}\r\n        timeout={200}\r\n        classNames=\"filter\"\r\n        unmountOnExit\r\n        onEnter={() => setAnimateButton(true)}\r\n        onExited={() => setAnimateButton(false)}>\r\n        <div className={classes.sortingHolder} >\r\n          <div className={classes.container}>\r\n<<<<<<< HEAD\r\n            <div className={classes.scrollwrapper}>\r\n              <h4 className={classes.title}> Search posts</h4>\r\n              <input type=\"text\"  className={classes.search} placeholder=\"lets find posts..\" onChange={(event)=>{getFilterValue('query', event.target.value)}} />\r\n              <div className={classes.orientation}>\r\n                <h4 className={classes.title}> Posts orientation</h4>\r\n                <select className={classes.select} onChange={(event)=>{getFilterValue('orientation', event.target.value)}}>\r\n                    {state.filterOptions.orientation.map((item)=>{\r\n                      return <option value={item} key={item}>{item}</option>\r\n                  })}\r\n                </select>\r\n              </div>\r\n              <div className={classes.count}>\r\n                <h4 className={classes.title}>Count posts</h4>\r\n                <select className={classes.select}  onChange={(event) => {getFilterValue('perPage', event.target.value)}}>\r\n                    {state.filterOptions.postsCounter.map((item)=>{\r\n                      return <option value={item} key={item}>{item}</option>\r\n                  })}\r\n                </select>\r\n              </div>\r\n              <div className={classes.colors}>\r\n                <h4 className={classes.title}> Posts colors</h4>\r\n                <select className={classes.select}  onChange={(event)=>{getFilterValue('color', event.target.value)}}>\r\n                    {state.filterOptions.colors.map((item)=>{\r\n                      return <option value={item} key={item}>{item}</option>\r\n                  })}\r\n                </select>\r\n              </div>\r\n              <div className={classes.btnWrapper}>\r\n                  <BtnPrimary\r\n                   value={\"Find Posts\"}\r\n                    onHandleFunction = {                                                              \r\n                    getPosts}\r\n                  type=\"sybmit\"/>\r\n                <BtnPrimary\r\n                  value={\"Reset filter\"}\r\n                  onClick = {()=> console.log(2123)}\r\n                  type=\"sybmit\"/>\r\n              </div>\r\n=======\r\n            <Search\r\n              value={searchQuery}\r\n              onChangeFunc={setTopic}/>\r\n            <Range text={\"Chose amount posts:\"}\r\n              onChangeFunc={setRengeValue}/>\r\n            <div className={classes.orientation}>\r\n              <BtnPrimary  linkHref={'#'} value={\"landscape\"}\r\n                onClickFunc={ ()=> getOrientirValue('landscape','landscape')}/>\r\n              <BtnPrimary linkHref={'#'}  value={\"portrait\"}\r\n                 onClickFunc={ ()=> getOrientirValue('landscape','landscape')}/>\r\n              <BtnPrimary linkHref={'#'}  value={\"squarish\"}\r\n                  onClickFunc={ ()=> getOrientirValue('landscape','landscape')}/>\r\n            </div>\r\n            <div className={classes.colors}>\r\n              <Select\r\n                onChangeFunc={setColor}\r\n                options={[\r\n                    \"black_and_white\",\r\n                    \"black\",\r\n                    \"white\",\r\n                    \"yellow\",\r\n                    \"orange\",\r\n                    \"red\",\r\n                    \"purple\",\r\n                    \"magenta\",\r\n                    \"green\",\r\n                    \"teal\",\r\n                    \"blue\",]}/>\r\n            </div>\r\n            <div className={classes.btnWrapper}>\r\n              <BtnPrimary\r\n                value={\"Find Posts\"}\r\n                onClickFunc = {getfiltered}\r\n                type=\"sybmit\"/>\r\n              <BtnPrimary\r\n                value={\"Reset filter\"}\r\n                onClickFunc = {getallPosts}\r\n                type=\"sybmit\"/>\r\n>>>>>>> b1827605585ea0e2d03a0692f3ca1a5c3d37e3b2\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </CSSTransition>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","E:\\study\\PictureApp-react\\src\\components\\Card\\Card.js",[],"E:\\study\\PictureApp-react\\src\\UI\\BtnPrimary.js",[],"E:\\study\\PictureApp-react\\src\\components\\Popup\\Popup.js",[],{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","severity":1,"message":"92","line":29,"column":8,"nodeType":"93","endLine":29,"endColumn":14,"suggestions":"94"},{"ruleId":"91","severity":1,"message":"95","line":33,"column":6,"nodeType":"93","endLine":33,"endColumn":12,"suggestions":"96"},{"ruleId":"97","severity":1,"message":"98","line":11,"column":11,"nodeType":"99","messageId":"100","endLine":11,"endColumn":22},{"ruleId":"101","severity":1,"message":"102","line":23,"column":43,"nodeType":"103","messageId":"104","endLine":23,"endColumn":45},"no-native-reassign",["105"],"no-negated-in-lhs",["106"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'state'. Either include it or remove the dependency array.","ArrayExpression",["107"],"React Hook useEffect has a missing dependency: 'posts'. Either include it or remove the dependency array.",["108"],"no-unused-vars","'searchPosts' is assigned a value but never used.","Identifier","unusedVar","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-global-assign","no-unsafe-negation",{"desc":"109","fix":"110"},{"desc":"111","fix":"112"},"Update the dependencies array to be: [page, state]",{"range":"113","text":"114"},"Update the dependencies array to be: [data, posts]",{"range":"115","text":"116"},[858,864],"[page, state]",[922,928],"[data, posts]"]